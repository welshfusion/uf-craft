{#
===============================================================================
    Full (full)

    Variables
        - Block (block)

    Fields:
        Content:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Sub Heading (heading2)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)
            - Cards (cards)
                - Heading (heading)
                - Text (text)

        Settings:
            - Content Width (contentWidth)
            - Banner Height (bannerHeight)
            - Show Pattern? (showPattern)
            - Background Color (backgroundColor)
            - Overlay Opacity (overlayOpacity)
            - Content Alignment (contentAlignment)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set image = block.image.one() %}
{% set video = block.backgroundVideo.all() %}

{% set headingTag = block.headingSize.getValue()|default('h1') %}
{% set fontWeight = block.fontWeight.getValue()|default('medium') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set contentWidth = block.contentWidth|default('0;12') %}

{% set bannerHeight = block.bannerHeight.getValue()|default('full') %}
{% set height = {
    'small'  : 'lg:min-h-[530px]',
    'medium' : 'lg:min-h-[650px]',
    'full'   : 'lg:min-h-[940px]'
} %}

{% set backgroundColorLabel = block.backgroundColor.label|default('white') %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = block.overlayOpacity.getValue|default(image|length or video|length ? 0 : null) %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-up'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

{% set buttons = block.buttons.all() %}
{% set cards = block.cards.all() %}

<section class="flex items-center relative {{ height[bannerHeight] }}">
    {% if image|length or video|length %}
        {{ render.renderVideo({
            image: image|length ? image,
            alt: image|length ?  image.title,
            width: image|length ?  image.width,
            height: image|length ?  image.height,
            class: 'absolute object-cover top-0 w-full h-full',
            lazy: false,
            videoLazy: false,
            videos: video,
            videoClass: 'absolute object-cover top-0 w-full h-full',
            videoPoster: image,
            videoAttrs: {
                preload: "none",
            }
        }) }}
    {% endif %}
    <div class="absolute w-full h-full z-10 {{ backgroundColor }} {{ bgOpacity }}"></div>

    {% if block.showPattern %}
    <svg aria-hidden="true" class="absolute inset-x-0 z-10 h-full w-full [mask-image:linear-gradient(to_bottom_left,white_40%,transparent_50%)] {{ render.foregroundColors({
        background: backgroundColorLabel,
        opacity: overlayOpacity,
        changeDefaultColor: true,
        type: 'pattern'
    }) }}">
        <rect width="100%" height="100%" fill="url(#:R6lkq:)" stroke-width="0"></rect>
        <svg x="50%" y="-96" stroke-width="0" class="overflow-visible">
            <path transform="translate(64 160)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
            <path transform="translate(128 320)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
            <path transform="translate(288 480)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
            <path transform="translate(512 320)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
            <path transform="translate(544 640)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
            <path transform="translate(320 800)" d="M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z"></path>
        </svg>
        <defs>
            <pattern id=":R6lkq:" width="96" height="480" x="50%" patternUnits="userSpaceOnUse" patternTransform="translate(0 -96)" fill="none">
                <path d="M128 0 98.572 147.138A16 16 0 0 1 82.883 160H13.117a16 16 0 0 0-15.69 12.862l-26.855 134.276A16 16 0 0 1-45.117 320H-116M64-160 34.572-12.862A16 16 0 0 1 18.883 0h-69.766a16 16 0 0 0-15.69 12.862l-26.855 134.276A16 16 0 0 1-109.117 160H-180M192 160l-29.428 147.138A15.999 15.999 0 0 1 146.883 320H77.117a16 16 0 0 0-15.69 12.862L34.573 467.138A16 16 0 0 1 18.883 480H-52M-136 480h58.883a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1-18.883 320h69.766a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1 109.117 160H192M-72 640h58.883a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1 45.117 480h69.766a15.999 15.999 0 0 0 15.689-12.862l26.856-134.276A15.999 15.999 0 0 1 173.117 320H256M-200 320h58.883a15.999 15.999 0 0 0 15.689-12.862l26.856-134.276A16 16 0 0 1-82.883 160h69.766a16 16 0 0 0 15.69-12.862L29.427 12.862A16 16 0 0 1 45.117 0H128"></path>
            </pattern>
        </defs>
    </svg>
    {% endif %}

    <div class="relative container pt-40 pb-20 z-20">
        {% if block.eyebrow|length or block.heading|length or block.subHeading|length or block.text|length or buttons|length %}
        <div class="{{ render.contentWidth({width: contentWidth}) }}">
            {{ render.basicContents({
                eyebrow: block.eyebrow,
                heading: block.heading,
                subHeading: block.subHeading,
                text: block.text,
                buttons: buttons,
                headingTag: headingTag,
                fontWeight: fontWeight,
                backgroundColorLabel: backgroundColorLabel,
                opacity: overlayOpacity,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.animationStyle.getValue()|default('fade-up'),
                contentAnimationDuration: block.animationDuration.getValue()|default(1500),
                contentAnimationOffset: block.animationOffset.getValue()|default(200),
                contentAnimationEasing: block.animationEasing.getValue()|default(null)
            }) }}
        </div>
        {% endif %}

        {% if cards|length %}
        <div class="mt-16">
            <dl class="grid grid-cols-1 gap-10 sm:grid-cols-2 lg:auto-cols-fr lg:grid-flow-col lg:grid-cols-none">
                {% for card in cards %}
                    <div class="flex flex-col-reverse justify-end pl-8 relative before:absolute after:absolute before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px opacity-100 transform-none {{ render.foregroundColors({
                        background: backgroundColorLabel,
                        opacity: overlayOpacity,
                        changeDefaultColor: true,
                        type: 'border'
                    }) }}" {{ contentAnimation|raw }}>
                        {% if card.text|length %}
                        <dt class="mt-2 space-y-2">
                            {{ render.replaceElements(card.text, {
                                background: backgroundColorLabel,
                            }) }}
                        </dt>
                        {% endif %}

                        {% if card.heading|length %}
                        <dd class="font-display text-3xl font-semibold sm:text-4xl {{ render.foregroundColors({
                            background: backgroundColorLabel,
                            opacity: overlayOpacity,
                            changeDefaultColor: true,
                            type: 'heading'
                        }) }}">
                            {{ card.heading }}
                        </dd>
                        {% endif %}
                    </div>
                {% endfor %}
            </dl>
        </div>
        {% endif %}
    </div>
</section>

{# <section class="{{ backgroundColor }} {{ bgOpacity }} my-24 sm:my-32 md:my-56">
    <div class="container">
        <div class="transform-none {{ render.contentWidth({width: contentWidth}) }}">
            {{ render.basicContents({
                eyebrow: block.eyebrow,
                heading: block.heading,
                subHeading: block.subHeading,
                text: block.text,
                buttons: buttons,
                headingTag: headingTag,
                fontWeight: fontWeight,
                backgroundColorLabel: backgroundColorLabel,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.animationStyle.getValue()|default('fade-up'),
                contentAnimationDuration: block.animationDuration.getValue()|default(1500),
                contentAnimationOffset: block.animationOffset.getValue()|default(200),
                contentAnimationEasing: block.animationEasing.getValue()|default(null)
            }) }}
        </div>

        {% if cards|length %}
        <div class="mt-16">
            <dl class="grid grid-cols-1 gap-10 sm:grid-cols-2 lg:auto-cols-fr lg:grid-flow-col lg:grid-cols-none">
                {% for card in cards %}
                    <div class="flex flex-col-reverse justify-end pl-8 relative before:absolute after:absolute before:bg-green-500 after:bg-neutral-950/10 before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px opacity-100 transform-none">
                        {% if card.text|length %}
                        <dt class="mt-2">
                            {{ render.replaceElements(card.text, {
                                background: backgroundColorLabel,
                            }) }}
                        </dt>
                        {% endif %}

                        {% if card.heading|length %}
                        <dd class="font-display text-3xl font-semibold text-cyprus-500 sm:text-4xl">
                            {{ card.heading }}
                        </dd>
                        {% endif %}
                    </div>
                {% endfor %}
            </dl>
        </div>
        {% endif %}
    </div>
</section> #}

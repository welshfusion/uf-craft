{#
===============================================================================
    Full (full)

    Variables
        - Block (block)

    Fields:
        Content:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Sub Heading (heading2)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)
            - Cards (cards)
                - Heading (heading)
                - Text (text)

        Settings:
            - Content Width (contentWidth)
            - Banner Height (bannerHeight)
            - Show Pattern? (showPattern)
            - Pattern Background Color (patternBackgroundColor)
            - Background Color (backgroundColor)
            - Overlay Opacity (overlayOpacity)
            - Content Alignment (contentAlignment)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set headingTag = block.headingSize.getValue()|default('h1') %}
{% set fontWeight = block.fontWeight.getValue()|default('medium') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set overlayOpacity = block.overlayOpacity.getValue|default('60') %}
{% set contentWidth = block.contentWidth|default('0;12') %}
{% set showPattern = block.showPattern ?? false %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set buttons = block.buttons.all() %}
{% set cards = block.cards.all() %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-up'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

{% set basicContentsExist = block.eyebrow|length or block.heading|length or block.subHeading|length or block.text|length or buttons|length %}

{% if basicContentsExist or cards|length %}
    <section class="{{ backgroundColor }} {{ bgOpacity }}">
        <div class="mx-auto container mt-24 sm:mt-32">
            {% if basicContentsExist %}
            <div class="mx-auto max-w-2xl lg:max-w-none {{ backgroundColorLabel != 'white' ? 'pt-10' }}">
                <div class="opacity-100 transform-none {{ render.contentWidth({width: contentWidth}) }}">
                {{ render.basicContents({
                    eyebrow: block.eyebrow,
                    heading: block.heading,
                    subHeading: block.subHeading,
                    text: block.text,
                    buttons: buttons,
                    headingTag: headingTag,
                    fontWeight: fontWeight,
                    contentAlignment: contentAlignment,
                    backgroundColorLabel: backgroundColorLabel,
                    animation: block.animation,
                    contentAnimationStyle: block.contentAnimationStyle.value|default('fade-up'),
                    contentAnimationDuration: block.contentAnimationDuration.value|default(1500),
                    contentAnimationOffset: block.contentAnimationOffset.value|default(200),
                    contentAnimationEasing: block.contentAnimationEasing.value|default(null)
                }) }}
                </div>
            </div>
            {% endif %}

            {% if cards|length %}
            <div class="mt-16 {{ backgroundColorLabel != 'white' ? 'pb-10' }}">
                <div class="mx-auto max-w-2xl lg:max-w-none"{{ contentAnimation|raw }}>
                    <dl class="grid grid-cols-1 gap-10 sm:grid-cols-2 lg:auto-cols-fr lg:grid-flow-col lg:grid-cols-none">
                        {% for card in cards %}
                        {% if card.text|length or card.heading|length %}
                        <div class="flex flex-col-reverse pl-8 relative before:absolute after:absolute {{ backgroundColorLabel == 'green' ? 'before:bg-cyprus-300' : 'before:bg-green-500' }} after:bg-neutral-950/10 before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px opacity-100 transform-none">
                            {% if card.text|length %}
                            <dt class="mt-2 text-base text-neutral-600">
                                {{ render.replaceElements(card.text, {
                                    background: backgroundColorLabel,
                                    paragraphFontSize: 'text-base',
                                }) }}
                            </dt>
                            {% endif %}

                            {% if card.heading|length %}
                            <dd class="font-display text-3xl font-semibold sm:text-4xl {{ render.foregroundColors({background: backgroundColorLabel, type: 'heading'}) }}">
                                {{ card.heading|nl2br }}
                            </dd>
                            {% endif %}
                        </div>
                        {% endif %}
                        {% endfor %}
                    </dl>
                </div>
            </div>
            {% endif %}
        </div>
    </section>
{% endif %}
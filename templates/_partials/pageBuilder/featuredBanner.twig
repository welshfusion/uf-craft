{#
===============================================================================
    Featured Banner (featuredBanner)

    Variables
        - Block (block)

    Fields:
        Content:
            - Image (image)
            - Video (backgroundVideo)
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Sub Heading (subHeading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)
            - Contact Info (contactInfo)
                - Heading (heading)
                - Contact Cards (contactCards)

        Settings:
            - Content Width (contentWidth)
            - Container Size (containerSize)
            - Rounded Corners (roundedCorners)
            - Background Color (backgroundColor)
            - Content Alignment (contentAlignment)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set headingTag = block.headingSize.getValue()|default('h3') %}
{% set fontWeight = block.fontWeight.getValue()|default('medium') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set containerSize = block.containerSize.getValue()|default('full') %}
{% set contentWidth = block.contentWidth|default('0;12') %}
{% set roundedCorners = block.roundedCorners ?? false %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'none') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = block.overlayOpacity.getValue()|default('none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set image = block.image.one() %}
{% set videos = block.backgroundVideo ?? null %}
{% set buttons = block.buttons.all() %}

{% set contactInfo = block.contactInfo.all() %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.contentAnimationStyle.value|default('fade-up'),
    animationDuration: block.contentAnimationDuration.value|default(1500),
    animationOffset: block.contentAnimationOffset.value|default(200),
    animationEasing: block.contentAnimationEasing.value|default(null)
}) | raw %}

{% if containerSize == 'container' %}
    {% set spacing = render.spacing({
        type: 'marginPadding',
        marginTop: block.marginTop.getValue()|default('medium'),
        marginBottom: block.marginBottom.getValue()|default('medium'),
        paddingTop: block.paddingTop.getValue()|default('none'),
        paddingBottom: block.paddingBottom.getValue()|default('none'),
        currentBgColor: backgroundColorLabel
    }) %}
{% endif %}

<section id="{{ block.sectionId|length ? block.sectionId : 'block-' ~ block.getId() }}" class="{{ containerSize == 'full' ? backgroundColor ~ spacing ~ bgOpacity }} {{ containerSize == 'full' and roundedCorners ? 'rounded-4xl' }}">
    <div class="container">
        <div class="{{ containerSize == 'container' ? 'px-6 md:px-12 ' ~  backgroundColor ~ spacing ~ bgOpacity }} {{ containerSize == 'container' and roundedCorners ? 'rounded-4xl' }}">
            <div class="{{ render.contentWidth({width: contentWidth}) }}">
                {% if block.eyebrow|length or block.heading|length or block.subHeading|length or block.text|length %}
                {{ render.basicContents({
                    eyebrow: block.eyebrow,
                    heading: block.heading,
                    subHeading: block.subHeading,
                    text: block.text,
                    headingTag: headingTag,
                    fontWeight: fontWeight,
                    backgroundColorLabel: backgroundColorLabel,
                    contentAlignment: contentAlignment,
                    animation: block.animation,
                    contentAnimationStyle: block.animationStyle.getValue()|default('fade-up'),
                    contentAnimationDuration: block.animationDuration.getValue()|default(1500),
                    contentAnimationOffset: block.animationOffset.getValue()|default(200),
                    contentAnimationEasing: block.animationEasing.getValue()|default(null)
                }) }}
                {% endif %}

                {% for button in buttons %}
                    {% if loop.first %}
                    <div class="flex flex-wrap items-center gap-5 mt-5 {{ render.getAlignment({
                        alignment: contentAlignment,
                        type: 'justify'
                        }) }}" {{ contentAnimation|raw }}
                    >
                    {% endif %}
                        {{ render.createButton({
                            button: button.button,
                            buttonType: button.buttonType.getValue()|default("button"),
                            buttonColor: button.buttonColor.label|default('cyprus'),
                            icon: button.icon,
                            iconPosition: button.iconPosition.getValue()|default('right'),
                            background: backgroundColorLabel,
                            textSize: 'text-sm'
                        }) }}
                    {% if loop.last %}
                    </div>
                    {% endif %}
                {% endfor %}

                {% if contactInfo|length %}
                <div class="mt-10 border-t {{ backgroundColorLabel == 'green' ? 'border-white' : 'border-green-500' }}" {{ contentAnimation|raw }}>
                    {% for item in contactInfo %}
                        <div class="{{ loop.first ? 'mt-10' : 'mt-10 pt-10 relative before:absolute after:absolute before:left-0 before:top-0 before:h-px before:w-6 after:left-8 after:right-0 after:top-0 after:h-px ' ~ render.foregroundColors({background: backgroundColorLabel, type: 'border'}) }}">
                            {% if item.heading|length %}
                            <h2 class="font-display text-base font-semibold {{ render.foregroundColors({background: backgroundColorLabel, type: 'heading'}) }}">
                                {{ item.heading|nl2br }}
                            </h2>
                            {% endif %}

                            <div class="grid grid-cols-1 gap-8 text-sm {{ item.contactCards|length > 1 ? 'sm:grid-cols-2' }} {{ item.heading|length ? 'mt-6' }}">
                                {% for block in item.contactCards.all() %}
                                    {% include "_partials/pageBuilder/contactCards/#{block.type.handle}" %}
                                {% endfor %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</section>
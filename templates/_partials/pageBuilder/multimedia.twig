{#
===============================================================================
    Multimedia (multimedia2)

    Variables
        - Block (block)

    Fields:
        Content:
            Column 1:
                - Images (images)
                - Video (video)

            Column 2:
                - Eyebrow (eyebrow)
                - Heading (heading)
                - Text (text)
                - Buttons (buttons) [Matrix]
                    - Button Type (buttonType)
                    - Button Color (buttonColor)
                    - Icon (icon)
                    - Icon Position (iconPosition)
                    - Button (button)

            Text Blocks:
                - Text Block Heading (heading2)
                - Multimedia Card (multimediaCard)

        Auxiliary:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - Background Color (backgroundColor)
            - Content Alignment (contentAlignment)
            - Image Position (imagePosition)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
            - section Id (sectionId)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set containerWrapper = containerWrapper ?? false %}
{% set containerImage = containerImage ?? false %}
{% set sectionTag = childContainer or containerWrapper ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set headingTag = block.headingSize.getValue()|default('h2') %}
{% set fontWeight = block.fontWeight.getValue()|default('bold') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set contentWidth = block.contentWidth|default('2;10') %}
{% set imagePosition = block.imagePosition.getValue()|default('right') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set buttons = block.buttons.all() %}
{% set image = block.image.one() %}
{% set videos = block.video ?? null %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.contentAnimationStyle.value|default('fade-up'),
    animationDuration: block.contentAnimationDuration.value|default(1500),
    animationOffset: block.contentAnimationOffset.value|default(200),
    animationEasing: block.contentAnimationEasing.value|default(null)
}) | raw %}

{% set cardAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle2.value|default('fade-up'),
    animationDuration: block.animationDuration2.value|default(1500),
    animationOffset: block.animationOffset2.value|default(200),
    animationEasing: block.animationEasing2.value|default(null)
}) | raw %}

<{{ sectionTag }} id="{{ block.sectionId|length ? block.sectionId : 'block-' ~ block.getId() }}" class="{{ backgroundColor }} {{ spacing }}">
    <div class="[counter-reset:section]">
        <div class="mx-auto max-w-7xl px-6 lg:px-8 group/section [counter-increment:section]">
            <div class="mx-auto max-w-2xl lg:max-w-none">
                {% if block.eyebrow2|length or block.heading3|length or block.text2 or buttons|length %}
                    <div class="{{ render.contentWidth({width: contentWidth}) }}">
                        {{ render.basicContents({
                            eyebrow: block.eyebrow2,
                            heading: block.heading3,
                            text: block.text2,
                            buttons: buttons,
                            headingTag: headingTag,
                            fontWeight: fontWeight,
                            backgroundColorLabel: backgroundColorLabel,
                            contentAlignment: contentAlignment,
                            animation: block.animation,
                            contentAnimationStyle: block.contentAnimationStyle.getValue()|default('fade-up'),
                            contentAnimationDuration: block.contentAnimationDuration.getValue()|default(1500),
                            contentAnimationOffset: block.contentAnimationOffset.getValue()|default(200),
                            contentAnimationEasing: block.contentAnimationEasing.getValue()|default(null)
                        }) }}
                    </div>
                {% endif %}

                <div class="mt-10 lg:flex lg:items-center lg:justify-end lg:gap-x-8 lg:group-even/section:justify-start xl:gap-x-20 {{ imagePosition == 'left' ? 'md:flex-row-reverse' : 'md:flex-row' }}">
                    {% if image|length or videos|length %}
                        <div class="flex justify-center" {{ contentAnimation|raw }}>
                            <div class="w-[33.75rem] flex-none lg:w-[45rem]" style="opacity: 1; transform: none;">
                                <div class="justify-center lg:justify-end lg:group-even/section:justify-start relative flex aspect-[719/680] w-full grayscale">
                                    <svg viewBox="0 0 655 680" fill="none" class="h-full">
                                        <g clip-path="url(#:S1:-clip)" class="group">
                                            <g class="origin-center scale-100 transition duration-500 motion-safe:group-hover:scale-105">
                                                <foreignObject width="655" height="680">
                                                    {# <img alt="" loading="lazy" width="2400" height="1800" decoding="async" data-nimg="1" class="w-full bg-neutral-100 object-cover" sizes="(min-width: 1024px) 41rem, 31rem" srcset="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=16&amp;q=75 16w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=32&amp;q=75 32w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=48&amp;q=75 48w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=64&amp;q=75 64w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=96&amp;q=75 96w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=128&amp;q=75 128w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=256&amp;q=75 256w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=384&amp;q=75 384w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=640&amp;q=75 640w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=750&amp;q=75 750w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=828&amp;q=75 828w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=3840&amp;q=75 3840w" src="/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhiteboard.2d6ee65a.jpg&amp;w=3840&amp;q=75" style="color: transparent; aspect-ratio: 655 / 680;"> #}
                                                    {% if image|length or videos|length %}
                                                        <div class="{{ block.heading|length or block.text|length ? 'mt-8 md:mt-10' }}">
                                                            {% set videoImage = videos.media.image ?? null %}
                                                            {% set finalImage = image|length ? image : videoImage %}
                                                            {% set videoId = 'image-video-'|t ~ block.getId() %}

                                                            {% if image|length or videos.media|length %}
                                                            <div class="relative">
                                                                <div class="pt-5">
                                                                    {{ render.renderVideo({
                                                                        image: finalImage|length ? finalImage,
                                                                        alt: image|length ? image.title : videoId,
                                                                        width: '2400',
                                                                        height: '1800',
                                                                        class: "w-full object-cover",
                                                                        lazy: false,
                                                                        decoding: 'async',
                                                                        plainImage: image|length ? false : true,
                                                                        videos: videos,
                                                                        videoClass: "w-full object-cover",
                                                                        videoType: 'popup',
                                                                        videoPoster: image,
                                                                        videoId: videoId,
                                                                        class: "w-full bg-neutral-100 object-cover md:w-41rem w-31rem",
                                                                        sizes: "(min-width: 1024px) 41rem, 31rem",
                                                                        videoAttrs: {
                                                                            preload: "none",
                                                                        }
                                                                    }) }}
                                                                </div>
                                                            </div>
                                                            {% endif %}
                                                        </div>
                                                    {% endif %}
                                                </foreignObject>
                                            </g>
                                            <use href="#:S1:-shape" stroke-width="2" class="stroke-neutral-950/10"></use>
                                        </g>
                                        <defs>
                                            <clipPath id=":S1:-clip">
                                                <path id=":S1:-shape" d="M537.827 9.245A11.5 11.5 0 0 1 549.104 0h63.366c7.257 0 12.7 6.64 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 586.87 151h-28.275a15.999 15.999 0 0 0-15.689 12.862l-59.4 297c-1.98 9.901 5.592 19.138 15.689 19.138h17.275l.127.001c.85.009 1.701.074 2.549.009 11.329-.874 21.411-7.529 24.88-25.981.002-.012.016-.016.023-.007.008.009.022.005.024-.006l24.754-123.771A11.5 11.5 0 0 1 580.104 321h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 617.87 472H559c-22.866 0-28.984 7.98-31.989 25.931-.004.026-.037.035-.052.014-.015-.02-.048-.013-.053.012l-24.759 123.798A11.5 11.5 0 0 1 490.87 631h-29.132a14.953 14.953 0 0 0-14.664 12.021c-4.3 21.502-23.18 36.979-45.107 36.979H83.502c-29.028 0-50.8-26.557-45.107-55.021l102.4-512C145.096 91.477 163.975 76 185.902 76h318.465c10.136 0 21.179-5.35 23.167-15.288l10.293-51.467Zm-512 160A11.5 11.5 0 0 1 37.104 160h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 74.87 311H11.504c-7.257 0-12.7-6.639-11.277-13.755l25.6-128Z" fill-rule="evenodd" clip-rule="evenodd">0</path>
                                            </clipPath>
                                        </defs>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    {% endif %}

                    {% if block.eyebrow|length or block.heading|length or block.text|length %}{% endif %}
                    <div class="mt-12 lg:mt-0 lg:w-[37rem] lg:flex-none lg:group-even/section:order-first">
                        <div style="opacity: 1; transform: none;">
                            {{ render.basicContents({
                                eyebrow: block.eyebrow,
                                heading: block.heading,
                                text: block.text,
                                subHeading: block.subHeading,
                                overrideParagraphFontSize: 'text-base',
                                headingTag: headingTag,
                                fontWeight: fontWeight,
                                backgroundColorLabel: backgroundColorLabel,
                                animation: block.animation,
                                contentAnimationStyle: block.animationStyle2.getValue()|default('fade-up'),
                                contentAnimationDuration: block.animationDuration2.getValue()|default(1500),
                                contentAnimationOffset: block.animationOffset2.getValue()|default(200),
                                contentAnimationEasing: block.animationEasing2.getValue()|default(null)
                            }) }}

                            {% set multimediaCard = block.multimediaCard.type(null).all() %}

                            {% if multimediaCard|length or block.heading2|length %}
                            <h3 class="mt-12 font-display text-base font-semibold {{ render.foregroundColors({background: backgroundColorLabel, type: 'heading'}) }}" {{ cardAnimation|raw }}>
                                {{ block.heading2 }}
                            </h3>
                            {% endif %}

                            {% for block in multimediaCard %}
                                <div {{ cardAnimation|raw }}>
                                {% include '_partials/pageBuilder/multimedia/' ~ block.type.handle ignore missing %}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
{#
===============================================================================
    Multimedia (multimedia)

    Variables
        - Block (block)

    Fields:
        Content:
            Column 1:
                - Images (images)
                - Video (video)

            Column 2:
                - Eyebrow (eyebrow)
                - Heading (heading)
                - Text (text)
                - Buttons (buttons) [Matrix]
                    - Button Type (buttonType)
                    - Button Color (buttonColor)
                    - Icon (icon)
                    - Icon Position (iconPosition)
                    - Button (button)

            Text Blocks:
                - Text Block Heading (heading2)
                - Multimedia Card (multimediaCard)

        Auxiliary:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Sub Heading (subHeading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - Background Color (backgroundColor)
            - Content Alignment (contentAlignment)
            - Image Position (imagePosition)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
            - section Id (sectionId)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set sectionTag = childContainer ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set headingTag = block.headingSize.getValue()|default('h3') %}
{% set fontWeight = block.fontWeight.getValue()|default('medium') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set contentWidth = block.contentWidth|default('0;12') %}
{% set imagePosition = block.imagePosition.getValue()|default('right') %}
{% set imagePatternLayout = block.imagePatternLayout.value|default('layout1') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'none') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = block.overlayOpacity.getValue()|default('none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set cardAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle2.value|default('fade-up'),
    animationDuration: block.animationDuration2.value|default(1500),
    animationOffset: block.animationOffset2.value|default(200),
    animationEasing: block.animationEasing2.value|default(null)
}) | raw %}

{% set image = block.image.one() %}
{% set videos = block.video ?? null %}
{% set videoImage = videos.media.image ?? null %}
{% set finalImage = image|length ? image : videoImage %}
{% set videoId = 'image-video-'|t ~ block.getId() %}

{% set buttons = block.buttons.all() %}
{% set multimediaCard = block.multimediaCard.all() %}

{% set auxiliaryExists = block.eyebrow2|length or block.heading3|length or block.subHeading2|length or block.text2|length or buttons|length %}
{% set basicContentsExist2 = block.eyebrow|length or block.heading|length or block.subHeading|length or block.text|length %}

<{{ sectionTag }} id="{{ block.sectionId|length ? block.sectionId : 'block-' ~ block.getId() }}" class="{{ containerBgExist ? backgroundColor }} {{ bgOpacity }} {{ spacing }} {{ childContainer ? 'relative z-20' }}">
    <div class="{{ not childContainer ? 'container' }} {{ childContainer and containerBgExist ? 'px-4 md:px-6' }}">
        {% if auxiliaryExists|length %}
        <div class="{{ render.contentWidth({width: contentWidth}) }}">
            {{ render.basicContents({
                eyebrow: block.eyebrow2,
                heading: block.heading3,
                subHeading: block.subHeading2,
                text: block.text2,
                buttons: buttons,
                headingTag: headingTag,
                fontWeight: fontWeight,
                backgroundColorLabel: backgroundColorLabel,
                opacity: overlayOpacity,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.animationStyle.getValue()|default('fade-up'),
                contentAnimationDuration: block.animationDuration.getValue()|default(1500),
                contentAnimationOffset: block.animationOffset.getValue()|default(200),
                contentAnimationEasing: block.animationEasing.getValue()|default(null)
            }) }}
        </div>
        {% endif %}

        {% if image|length or videos|length or basicContentsExist2|length or block.heading2|length or multimediaCard|length %}
        <div class="lg:flex lg:items-center lg:justify-end lg:gap-x-8 xl:gap-x-20 {{ imagePosition == 'left' ? 'lg:flex-row' : 'lg:flex-row-reverse' }} {{ auxiliaryExists|length ? 'mt-16' }}">

            {% if image|length or videos.media|length %}
                {% include "_partials/pageBuilder/multimedia/imagePatternLayout/#{imagePatternLayout}" %}
            {% endif %}

            {% if basicContentsExist2|length or block.heading2|length or multimediaCard|length %}
            <div class="mt-12 lg:mt-0 lg:w-[37rem] lg:flex-none">
                {% if basicContentsExist2|length %}
                {{ render.basicContents({
                    eyebrow: block.eyebrow,
                    heading: block.heading,
                    subHeading: block.subHeading,
                    text: block.text,
                    headingTag: headingTag,
                    fontWeight: fontWeight,
                    headingSpacing: 'mt-2',
                    backgroundColorLabel: backgroundColorLabel,
                    animation: block.animation,
                    contentAnimationStyle: block.animationStyle2.getValue()|default('fade-up'),
                    contentAnimationDuration: block.animationDuration2.getValue()|default(1500),
                    contentAnimationOffset: block.animationOffset2.getValue()|default(200),
                    contentAnimationEasing: block.animationEasing2.getValue()|default(null)
                }) }}
                {% endif %}

                {% if block.heading2|length or multimediaCard|length %}
                <div {{ cardAnimation|raw }}>
                    {% if block.heading2|length %}
                    <h3 class="mt-12 font-display text-base font-semibold {{ render.foregroundColors({background: backgroundColorLabel, type: 'heading'}) }}">
                        {{ block.heading2 }}
                    </h3>
                    {% endif %}

                    {% for block in multimediaCard %}
                        <div class="mt-8 {{ not loop.first ? 'pt-8 group-first:pt-0 group-first:before:hidden group-first:after:hidden relative before:absolute after:absolute before:left-0 before:top-0 before:h-px before:w-6 after:left-8 after:right-0 after:top-0 after:h-px ' ~ render.foregroundColors({background: backgroundColorLabel, type: 'border'}) }}">
                            {% include '_partials/pageBuilder/multimedia/' ~ block.type.handle ignore missing %}
                        </div>
                    {% endfor %}
                </div>
                {% endif %}
            </div>
            {% endif %}
        </div>
        {% endif %}
    </div>
</{{ sectionTag }}>
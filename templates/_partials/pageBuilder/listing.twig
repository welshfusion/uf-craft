{#
===============================================================================
    Listing (listing)

    Variables
        - Block (block)

    Fields:
        Content:
            - Listing (listing)
                Child:
                    - Testimonials (testimonials)
                    - Team (team)
                    - Client (client)
                    - Case Study (caseStudy)
                    - Blog (blog)

        Auxiliary:
            - Heading (heading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - Container Size (containerSize)
            - Rounded Corners (roundedCorners)
            - Background Color (backgroundColor)
            - Content Alignment (contentAlignment)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set containerWrapper = containerWrapper ?? false %}
{% set containerImage = containerImage ?? false %}
{% set sectionTag = childContainer or containerWrapper ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set headingTag = block.headingSize.getValue()|default('h2') %}
{% set fontWeight = block.fontWeight.getValue()|default('medium') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set contentWidth = block.contentWidth|default('0;12') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = block.overlayOpacity.getValue()|default('none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-up'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

{% set listingAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle2.value|default('fade-up'),
    animationDuration: block.animationDuration2.value|default(1500),
    animationOffset: block.animationOffset2.value|default(200),
    animationEasing: block.animationEasing2.value|default(null)
}) | raw %}

{% set children = block.listing.one() %}

{% if not isAjax %}
<{{ sectionTag }} id="{{ block.sectionId|length ? block.sectionId : 'block-' ~ block.getId() }}" class="{{ backgroundColor }} {{ bgOpacity }} {{ spacing }}">
    <div class="container">
        <div class="{{ render.contentWidth({width: contentWidth}) }}">
            {% if (children|length and children.type.handle != 'listingClient') and (block.eyebrow|length or block.heading|length or block.text|length) %}
            {{ render.basicContents({
                eyebrow: block.eyebrow,
                heading: block.heading,
                text: block.text,
                headingTag: headingTag,
                fontWeight: fontWeight,
                backgroundColorLabel: backgroundColorLabel,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.animationStyle.getValue()|default('fade-up'),
                contentAnimationDuration: block.animationDuration.getValue()|default(1500),
                contentAnimationOffset: block.animationOffset.getValue()|default(200),
                contentAnimationEasing: block.animationEasing.getValue()|default(null)
            }) }}
            {% endif %}
{% endif %}

            {% if children|length %}
            {% include "_partials/pageBuilder/listing/#{children.type.handle}" with {
                parent: block,
                block: children,
            } %}
            {% endif %}

{% if not isAjax %}
            {% set buttons = block.buttons.all() %}
            {% for button in buttons %}
                {% if loop.first %}
                <div class="flex flex-wrap items-center gap-5 mt-8 md:mt-10 {{ render.getAlignment({
                    alignment: contentAlignment,
                    type: 'justify'
                }) }}" {{ contentAnimation|raw }}>
                {% endif %}
                    {{ render.createButton({
                        button: button.button,
                        buttonType: button.buttonType.getValue()|default("button"),
                        buttonColor: button.buttonColor.label|default('cyprus'),
                        icon: button.icon,
                        iconPosition: button.iconPosition.getValue()|default('right'),
                        background: backgroundColorLabel,
                    }) }}
                {% if loop.last %}
                </div>
                {% endif %}
            {% endfor %}
        </div>
    </div>
</{{ sectionTag }}>
{% endif %}

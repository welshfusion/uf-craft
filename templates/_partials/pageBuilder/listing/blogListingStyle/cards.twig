{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set perRowLimit = block.perRowLimit.getValue()|default('2') %}
{% set rowLimit = {
    '2' : 'grid-cols-1 sm:grid-cols-2',
    '3' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
    '4' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4',
    '5' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-5'
} %}

{% set paramBlockId = craft.app.request.getParam("blockId") %}
{% set blockId = paramBlockId|default(parent.getId()) %}

{% set pagination = block.pagination %}
{% set limit = block.limit|default('12') %}

{% set relatedBlog = block.relatedBlog.limit(limit) %}
{% if not relatedBlog|length %}
    {% set relatedBlog = craft.entries.section("blog").limit(limit) %}
{% endif %}

{% if pagination %}
    {% paginate relatedBlog as pageInfo, entries %}
{% else %}
    {% set entries = relatedBlog.all() %}
{% endif %}

{% set contentId = 'blog' ~ parent.getId() %}
{% set paginationBtnClass = 'load-more-btn-' ~ parent.getId() %}

{% if not isAjax %}
<div class="{{ parent.eyebrow|length or parent.heading|length or parent.subHeading|length or parent.text|length ? 'mt-16' }}"
    {% if pagination %}
    {{ render.xModalContentListingFilter({
        url: url(craft.app.request.fullPath),
        contentId: contentId,
        loader: true,
        samePageLoadData: true,
        noResultsText: "Sorry. No data found for your search term.",
        paginationBtnClass: paginationBtnClass,
        filters: {
            blockId: blockId
        },
    }) }}
    {% endif %}
>
    <div {% if pagination %}:id="contentId"{% endif %} class="grid gap-x-8 gap-y-16 {{ rowLimit[perRowLimit] }}">
{% endif %}
        {% for blog in entries %}
            <div {{ listingAnimation|raw }}>
                <a href="{{ blog.getUrl() }}" class="relative group flex flex-col items-start pl-8 relative before:absolute after:absolute before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px {{ render.foregroundColors({
                    background: backgroundColorLabel,
                    type: 'border'
                }) }}">
                    <h3 class="mt-6 text-base font-semibold {{ render.foregroundColors({background: backgroundColorLabel, type: 'heading'}) }}">
                        {{ blog.title }}
                    </h3>

                    <div class="order-first text-sm {{ render.foregroundColors({background: backgroundColorLabel, type: 'subHeading'}) }}">
                        {{ block.postDate|date('F Y') }}
                    </div>

                    {% if blog.text|length %}
                    <div class="mt-2.5 space-y-2.5">
                        {{ render.replaceElements(blog.text, {
                            background: backgroundColorLabel,
                        }) }}
                    </div>
                    {% endif %}

                    <div class="mt-6 flex gap-x-3 text-base font-semibold transition {{ render.foregroundColors({background: backgroundColorLabel, type: 'detailPagelink'}) }}">
                        Read more
                        <svg viewBox="0 0 24 6" aria-hidden="true" class="w-6 flex-none fill-current">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M24 3 18 .5v2H0v1h18v2L24 3Z"></path>
                        </svg>
                    </div>
                </a>
            </div>
        {% endfor %}

        {% if pagination %}
        <div class="fixed top-0 bottom-0 left-0 right-0 backdrop-opacity-10 backdrop-invert bg-black/40 z-50"
            x-show="isLoading"
            style="display: none;"
        >
            {% include "_/includes/filterAnimation" with {
                blockId: blockId
            } %}
        </div>
        {% endif %}

        {% if pagination and pageInfo.nextUrl and pageInfo.totalPages > 1 %}
        {% set nextPageUrl = pageInfo.currentPage == 1 and (not paramBlockId|length) ? pageInfo.nextUrl ~ '?blockId=' ~ blockId : pageInfo.nextUrl %}
        {#
        ============================================
            Include Pagination
        ============================================
        #}
        {% include "_/includes/pagination" with {
            nextPageUrl: nextPageUrl,
            paginationBtnClass: paginationBtnClass,
            blockId: blockId
        } %}
        {% endif %}
{% if not isAjax %}
    </div>
</div>
{% endif %}

{#
===============================================================================
    Listing Client (listingClient) [Cards]

    Variables
        - Block (block)

    Fields:
        Content:
            - Related Client (relatedClient)

        Settings:
            - Per Row Limit (perRowLimit)
            - Limit (limit)
            - Listing Style (listingStyle)
            - Show Border? (showBorder)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set perRowLimit = block.perRowLimit.getValue()|default('4') %}
{% set rowLimit = {
    '2' : 'grid-cols-1 sm:grid-cols-2',
    '3' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
    '4' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4',
    '5' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-5'
} %}

{% set limit = block.limit|default('12') %}

{% set relatedClient = block.relatedClient.limit(limit) %}
{% if not relatedClient|length %}
    {% set relatedClient = craft.entries.section("client").limit(limit) %}
{% endif %}

{% set relatedClient = relatedClient.with(['image2']).cache().all() %}

{% if parent.eyebrow|length or parent.heading|length or parent.subHeading|length or parent.text|length %}
    {{ render.basicContents({
        eyebrow: parent.eyebrow,
        heading: parent.heading,
        subHeading: parent.subHeading,
        text: parent.text,
        headingTag: headingTag,
        fontWeight: fontWeight,
        addBorder: not block.showBorder ? true : false,
        backgroundColorLabel: backgroundColorLabel,
        opacity: overlayOpacity,
        contentAlignment: contentAlignment,
        animation: parent.animation,
        contentAnimationStyle: parent.animationStyle.getValue()|default('fade-up'),
        contentAnimationDuration: parent.animationDuration.getValue()|default(1500),
        contentAnimationOffset: parent.animationOffset.getValue()|default(200),
        contentAnimationEasing: parent.animationEasing.getValue()|default(null)
    }) }}
{% endif %}

<div class="{{ parent.eyebrow|length or parent.heading|length or parent.subHeading|length or parent.text|length ? 'mt-10' }}">
    {% if block.showBorder %}
        <div class="pt-12 relative before:absolute after:absolute before:left-0 before:top-0 before:h-px before:w-6 after:left-8 after:right-0 after:top-0 after:h-px {{ render.foregroundColors({background: backgroundColorLabel, opacity: overlayOpacity, changeDefaultColor: true, type: 'border'}) }}"></div>
    {% endif %}

    <ul role="list" class="grid gap-x-8 gap-y-12 {{ rowLimit[perRowLimit] }}">
        {% for item in relatedClient %}
            {% set image = item.image2.one() %}

            <li class="group" {{ listingAnimation|raw }}>
                <div class="overflow-hidden">
                    {% if block.showBorder and loop.index > perRowLimit %}
                        <div class="pt-12 relative before:absolute after:absolute before:left-0 before:top-0 before:h-px before:w-6 after:left-8 after:right-0 after:top-0 after:h-px {{ render.foregroundColors({background: backgroundColorLabel, opacity: overlayOpacity, changeDefaultColor: true, type: 'border'}) }}"></div>
                    {% endif %}

                    {% if image|length %}
                    <div>
                        {{ render.setImage({
                            image: image,
                            alt: image.title,
                            width: 184,
                            height: 36,
                            class: 'text-transparent'
                        }) }}
                    </div>
                    {% endif %}
                </div>
            </li>
        {% endfor %}
    </ul>
</div>
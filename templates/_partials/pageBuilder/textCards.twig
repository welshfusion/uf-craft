{#
===============================================================================
    Text Cards (textCards)

    Variables
        - Block (block)

    Fields:
        Content:
                - Heading (heading)
                - Simple Text (simpleText)
        Auxiliary:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - background Color (backgroundColor)
            - content Alignment (contentAlignment)
            - Per Row Limit (perRowLimit)
            - Listing Style (listingStyle)
            - Heading Size (headingSize)
            - font Weight (fontWeight)
            - Section Id (sectionId)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set sectionTag = childContainer ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set headingColor = block.headingColor.label|default('white') %}
{% set headingTag = block.headingSize.getValue()|default('h2') %}
{% set fontWeight = block.fontWeight.getValue()|default('bold') %}
{% set contentAlignment = block.contentAlignment.value|default('left') %}
{% set contentWidth = block.contentWidth|default('0;12') %}
{% set perRowLimit = block.perRowLimit.getValue()|default(parent == 'twoColumns' ? '2' : '3') %}
{% set listingStyle = block.listingStyle.value|default('cards') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = block.overlayOpacity.getValue()|default('none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set buttons = block.buttons.all() %}

{% set rowLimit = {
    '2' : 'grid-cols-1 sm:grid-cols-2',
    '3' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
    '4' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4',
} %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.contentAnimationStyle.value|default('fade-up'),
    animationDuration: block.contentAnimationDuration.value|default(1500),
    animationOffset: block.contentAnimationOffset.value|default(200),
    animationEasing: block.contentAnimationEasing.value|default(null)
}) | raw %}

{% set cardAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-up'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

<{{ sectionTag }} class="{{ spacing }} {{ backgroundColor }} {{ bgOpacity }} {{ render.contentWidth({width: contentWidth}) }}">
    <div class="rounded-4xl {{ render.contentWidth({width: contentWidth}) }}">
    {% if block.eyebrow|length or block.heading|length or block.text or buttons|length %}
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
            {{ render.basicContents({
                eyebrow: block.eyebrow,
                heading: block.heading,
                subHeading: block.subHeading,
                text: block.text,
                buttons: buttons,
                headingTag: headingTag,
                fontWeight: fontWeight,
                backgroundColorLabel: backgroundColorLabel,
                bgOpacity: overlayOpacity,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.contentAnimationStyle.getValue()|default('fade-up'),
                contentAnimationDuration: block.contentAnimationDuration.getValue()|default(1500),
                contentAnimationOffset: block.contentAnimationOffset.getValue()|default(200),
                contentAnimationEasing: block.contentAnimationEasing.getValue()|default(null)
            }) }}
        </div>
    {% endif %}
        {% include "_partials/pageBuilder/textCards/#{listingStyle}" %}
    </div>
</{{ sectionTag }}>